from flask import Flask, request, jsonify
import gspread
from oauth2client.service_account import ServiceAccountCredentials
import json
import os

app = Flask(__name__)

# ‚úÖ Load credentials from environment variable
service_account_info = json.loads(os.environ["GOOGLE_SERVICE_ACCOUNT_JSON"])

scope = [
    "https://www.googleapis.com/auth/spreadsheets",
    "https://www.googleapis.com/auth/drive"
]

creds = ServiceAccountCredentials.from_json_keyfile_dict(service_account_info, scope)
gc = gspread.authorize(creds)

# ‚úÖ Open the spreadsheet and specific sheet
sheet = gc.open("CC CHAT BOT 2025").worksheet("ASP Profile")
data = sheet.get_all_records()

@app.route("/", methods=["POST"])
def webhook():
    req = request.get_json(force=True)
    print("====== Incoming from Dialogflow ======")
    print(json.dumps(req, indent=2, ensure_ascii=False))

    intent_name = req.get("queryResult", {}).get("intent", {}).get("displayName", "")
    parameters = req.get("queryResult", {}).get("parameters", {})
    province = parameters.get("geo-state", "").strip()

    if intent_name == "SearchServiceCenter":
        print("üî• Intent matched: SearchServiceCenter")
        print("üìç Province received:", province)

        # ‚úÖ ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÉ‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        search_columns = ["name_th", "amphur_th", "province_th", "service_area", "tambon_th"]
        matched = []
        for row in data:
            for col in search_columns:
                if province in str(row.get(col, "")):
                    matched.append(row)
                    break  # ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡πá‡∏Ñ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏≠‡∏∑‡πà‡∏ô‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡∏≠‡πÅ‡∏•‡πâ‡∏ß

        if matched:
            reply = ""
            for m in matched[:3]:  # ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå 3 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                name = m.get("name_th", "-")
                address = m.get("address_th", "-")
                phone = m.get("telephone", "-")
                hours = m.get("working_time", "-")
                emails = m.get("email", "-")
                region = m.get("region_th", "-")

                reply += f"üè¢ {name}\nüìç {address}\nüìû {phone}\nüïí {hours}\nüìß {emails}\nüåê {region}\n\n"
        else:
            reply = f"‡∏Ç‡∏≠‡∏≠‡∏†‡∏±‡∏¢ ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡∏≥‡∏ß‡πà‡∏≤ '{province}' ‡∏Ñ‡πà‡∏∞"

        return jsonify({"fulfillmentText": reply})

    return jsonify({"fulfillmentText": "‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö intent ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏£‡∏±‡∏ö"})

if __name__ == "__main__":
    app.run(debug=False, port=10000, host="0.0.0.0")
